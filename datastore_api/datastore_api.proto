// ***************************** SHOULD ONLY BE UPDATED/CHANGED TROUGH OUR PROTOREPO **********************************

syntax = "proto3";
option csharp_namespace = "Cbs.DataStore.Api";

import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

service GrpcDataStoreApi {
	rpc IndexDataNode (IndexDataNodeRequest) returns (IndexDataNodeReply);
    rpc GetTheme(GetThemeRequest) returns (GetThemeResponse);
    rpc GetContent(GetContentRequest) returns (GetContentResponse);
	rpc GetIdentityContent(GetIdentityContentRequest) returns (GetContentResponse);
	rpc LoadDnHierarchy (LoadDnHierarchyRequest) returns (LoadDnHierarchyReply);
	rpc GetDbActor (GetDbActorRequest) returns (GetDbActorReply);
	rpc GetDataSharings (GetDataSharingsRequest) returns (GetDataSharingsReply);
    rpc GetSharedResourceGroups (GetSharedResourceGroupsRequest) returns (GetSharedResourceGroupsReply);
	rpc ArchiveEmail (ArchiveEmailRequest) returns (ArchiveEmailReply);
	rpc ArchiveSms (ArchiveSmsRequest) returns (ArchiveSmsReply);
}

message IndexDataNodeRequest {
	string data_node_id = 1;
	bool update = 2;
	bool instant_indexing = 3;
}

message IndexDataNodeReply {	
}

message GetThemeRequest {
	string resourceGroupId = 1;
	string applicationId = 2;
	string theme_namespace = 3;
}

message GetThemeResponse { 
	string json = 1;
}

message GetContentRequest {
	string resourceGroupId = 1;
	string applicationId = 2;
	string portalType = 3;
}

message GetIdentityContentRequest {
	string resourceGroupId = 1;
	string applicationId = 2;
	string application_namespace = 3;
}

message GetContentResponse { 
	string json = 1;
}

message LoadDnHierarchyRequest {
  string resourceGroupId = 1;
  string actorId = 2;
  string namespace = 3;
}

message LoadDnHierarchyReply {
  string result = 1;
}

message GetDbActorRequest {
  string actorId = 1;
  reserved 2,3;
}

message GetDbActorReply {
	bool success = 1;
	string errorMessage = 2;
	ActorDto actor = 3;
}

message ActorDto {
	string id = 1;
	string resourceGroupId = 2;
	string displayName = 3;
	string timezoneId = 4;
	string role = 5;
	string roleStatus = 6;
	string namespace = 7;
	string imageUrl = 8;
	repeated ActorEmailDto emails = 9;
	repeated ActorIdentityDto identities = 10;
	repeated ActorPhoneDto phones = 11;
	string dataStoreId = 12;
}

message ActorIdentityDto {
	string identityId = 1;
	string createdById = 2;
	string createdAt = 3;
	string deletedById = 4;
	string deletedAt = 5;
	string flowType = 6;
}

message ActorPhoneDto {
	string phoneInformationElementId = 1;
	string prefix = 2;
	string number = 3;
	string internationalNumber = 4;
	string phoneType = 5;
	bool primary = 6;
	bool isVerified = 7;
	string phoneInformationElementNamespace = 8;
}

message ActorEmailDto{
	string address = 1;
	string emailInformationElementId = 2;
	bool primary = 3;
	bool isVerified = 4;
	string emailInformationElementNamespace = 5;
}

message GetDataSharingsRequest {
  string resourceGroupId = 1;
}

message GetDataSharingsReply {
  repeated DataSharingDto dataSharings = 1;
}

message DataSharingDto {
	string id = 1;
	string actorId = 2;
	string resourceGroupId = 3;
	string actorDisplayName = 4;
	google.protobuf.Timestamp createdAt = 5;
	string createdById = 6;
	google.protobuf.Timestamp sharingFromDate = 7;
	google.protobuf.Timestamp sharingToDate = 8;
	bool isDeleted = 9;
}


message GetSharedResourceGroupsRequest {
	string actorId = 1;
}

message GetSharedResourceGroupsReply{
	repeated string resourceGroupIds = 1;
}

message ArchiveEmailRequest {
	string body = 1;
	string parentId = 2;
	google.protobuf.Timestamp receivedAt = 3;
	repeated RecipientDto recipients = 4;
	string resourceGroupId = 5;
	string tenantId = 6;
	string senderEmail = 7;
	string subject = 8;
	string templateId = 9;
	string templateDisplayName = 10;
	string relatedCaseId = 11;
}

message ArchiveEmailReply {
	repeated string archives = 1;
}

message ArchiveSmsRequest {
	string displayName = 1;
	string body = 2;
	google.protobuf.Timestamp receivedAt = 3;
	repeated RecipientDto recipients = 4;
	repeated ArchiveOnDto archiveOn = 5;
	string templateId = 6;
	string templateTypeDisplayName = 7;
	string relatedCaseId = 8;
}

message ArchiveSmsReply {
	repeated string archives = 1;
}

message RecipientDto {
	string email = 1;
	string displayName = 2;
}

message ArchiveOnDto {
	string tenantId = 1;
	string resourceGroupId = 2;
	string parentId = 3;
	string parentNamespace = 4;
}


