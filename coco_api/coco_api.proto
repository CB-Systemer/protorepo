// ***************************** SHOULD ONLY BE UPDATED/CHANGED THROUGH OUR PROTOREPO **********************************
syntax = "proto3";

option csharp_namespace = "Coco.Api";
import "google/protobuf/wrappers.proto";

service CocoApi {
  rpc GetPolicy (GetAllConfigRequest) returns (GetPolicyReply);
  rpc GetDataNode (GetSingleDatanodeRequest) returns (GetDataNodeReply);
  rpc GetStateflow (GetSingleConfigRequest) returns (GetStateflowReply);
  rpc GetAllStateflows (GetAllConfigRequest) returns (GetAllStateflowsReply);
  rpc GetAllAccess (GetAllConfigRequest) returns (GetAllAccessReply);
  rpc GetAllDataNodes (GetAllDatanodesRequest) returns (GetAllDataNodesReply);
  rpc GetAllDataNodesByConfigName (GetAllDatanodesByConfigNameRequest) returns (GetAllDataNodesReply);
  rpc GetManyDataNodes (GetManyDatanodesRequest) returns (GetManyDataNodesReply);
  rpc GetAllNamespaces(GetAllConfigRequest) returns (GetAllNamespacesReply);
  rpc GetNamespace(GetSingleConfigRequest) returns (GetNamespaceReply);
  rpc GetAllNotifications(GetAllConfigRequest) returns (GetAllNotificationsReply);
  rpc GetNotification(GetSingleConfigRequest) returns (GetNotificationReply);
  rpc GetAllCountries(GetAllConfigRequest) returns (GetAllCountriesReply);
  rpc GetCountry(GetSingleConfigRequest) returns (GetCountryReply);
  rpc GetAllPermissions(GetAllConfigRequest) returns (GetAllPermissionsReply);
  rpc GetPermission(GetSingleConfigRequest) returns (GetPermissionReply);
  rpc GetAllTags(GetAllConfigRequest) returns (GetAllTagsReply);
  rpc GetTag(GetSingleConfigRequest) returns (GetTagReply);
  rpc GetManyTags(GetManyConfigRequest) returns (GetManyTagsReply);
  rpc GetAllTemplates(GetAllConfigRequest) returns (GetAllTemplatesReply);
  rpc GetTemplate(GetSingleConfigRequest) returns (GetTemplateReply);
  rpc GetAllTrackedActivities(GetAllConfigRequest) returns (GetAllTrackedActivitiesReply);
  rpc GetTrackedActivity(GetSingleConfigRequest) returns (GetTrackedActivityReply);
  rpc GetAllReminders(GetAllConfigRequest) returns (GetAllRemindersReply);
  rpc GetReminder(GetSingleConfigRequest) returns (GetReminderReply);
  rpc GetAllConfirmations(GetAllConfigRequest) returns (GetAllConfirmationsReply);
  rpc GetConfirmation(GetSingleConfigRequest) returns (GetConfirmationReply);
  rpc GetManyEntityfeatures(GetManyConfigRequest) returns (GetManyEntityfeaturesReply);
  rpc GetAllEntityfeatures(GetAllConfigRequest) returns (GetAllEntityfeaturesReply);
  rpc GetDistributionChannel(GetSingleConfigRequest) returns (GetDistributionChannelReply);
  rpc GetAllDistributionChannels(GetAllConfigRequest) returns (GetAllDistributionChannelsReply);
  rpc GetAllVatCodes(GetTypesRequest) returns (GetAllVatCodesReply);
  rpc GetAllUnitOfMeasures(GetTypesRequest) returns (GetAllUnitOfMeasuresReply);
  rpc GetAllUnitOfMeasureGroups(GetTypesRequest) returns (GetAllUnitOfMeasureGroupsReply);
  rpc GetAllLocalizedDisplayNames(GetTypesRequest) returns (GetAllLocalizedDisplayNamesReply);
  rpc GetAllFieldDataTypes(GetTypesRequest) returns (GetAllFieldDataTypesReply);
  rpc GetAllfieldCalculatedTypes(GetTypesRequest) returns (GetAllfieldCalculatedTypesReply);
  rpc GetWishConfig(GetSingleConfigRequest) returns (GetWishConfigReply);
  rpc GetCaseConfig(GetSingleConfigRequest) returns (GetCaseConfigReply);
  rpc GetConsentConfig(GetSingleConfigRequest) returns (GetConsentConfigReply);
  rpc GetActorConfig(GetSingleConfigRequest) returns (GetActorConfigReply);
  rpc GetActorRoleConfig(GetSingleConfigRequest) returns (GetActorRoleConfigReply);
  rpc GetManyActorRolesWildcardConfig(GetManyWildcardConfigRequest) returns (GetManyActorRolesConfigReply);
  rpc GetManyActorRolesConfig(GetManyConfigRequest) returns (GetManyActorRolesConfigReply);
  rpc GetAppointmentConfig(GetSingleConfigRequest) returns (GetAppointmentConfigReply);
  rpc GetCampaignConfig(GetSingleConfigRequest) returns (GetCampaignConfigReply);
  rpc GetEstateConfig(GetSingleConfigRequest) returns (GetEstateConfigReply);
  rpc GeIeUrlConfig(GetSingleConfigRequest) returns (GeIeUrlConfigReply);
  rpc GetLawRegulationConfig(GetSingleConfigRequest) returns (GetLawRegulationConfigReply);
  rpc GetToDoConfig(GetSingleConfigRequest) returns (GetToDoConfigReply);
  rpc GetAdtextConfig(GetSingleConfigRequest) returns (GetAdtextReply);
  rpc GetThemeConfig(GetSingleConfigRequest) returns (GetThemeConfigReply);
  rpc GetContentConfig(GetSingleConfigRequest) returns (GetContentConfigReply);
  rpc GetAllIcons(GetAllConfigRequest) returns (GetAllIconsReply);
  rpc GetImageTag(GetImageTagRequest) returns (GetImageTagReply);
  rpc GetReflowConfig(GetSingleConfigRequest) returns (GetReflowConfigReply);
  rpc GetAllPriceUnits(GetAllConfigRequest) returns (GetAllPriceUnitsReply);
  rpc GetAllProductTypes(GetAllConfigRequest) returns (GetAllProductTypesReply);
  rpc GetAllProductChannels(GetAllConfigRequest) returns (GetAllProductChannelsReply);
  rpc GetAllVatRates(GetAllConfigRequest) returns (GetAllVatRatesReply);
  rpc GetAllUiOptionLists(GetAllConfigRequest) returns (GetAllUiOptionListsReply);
  rpc GetAllGroups(GetAllConfigRequest) returns (GetAllGroupsReply);
  rpc GetAllActorPickerFilters(GetAllConfigRequest) returns (GetAllActorPickerFiltersReply);
  rpc GetListDefinition(GetSingleConfigRequest) returns (GetListDefinitionReply);
  rpc GetAllListDefinitions(GetAllConfigRequest) returns (GetAllListDefinitionsReply);
  rpc GetConfigNames(GetConfigNamesRequest) returns (GetConfigNamesReply);
  rpc GetConsumerConfigName(GetConsumerConfigNameRequest) returns (GetConsumerConfigNameReply);
  rpc SetConsumerConfigName(SetConsumerConfigNameRequest) returns (SetConsumerConfigNameReply);
  rpc GetActiveDocumentTemplates(GetActiveDocumentTemplatesRequest) returns (GetActiveDocumentTemplatesReply);
  rpc GetSmsCommand(GetSingleConfigRequest) returns (GetSmsCommandReply);  
  rpc GetAllSmsCommand(GetAllConfigRequest) returns (GetAllSmsCommandReply);  
  rpc GetQuestionnaire(GetSingleConfigRequest) returns (GetQuestionnaireReply);
  rpc GetAllQuestionnaires(GetAllConfigRequest) returns (GetAllQuestionnairesReply);
  rpc GetAllMessageStatuses(GetAllConfigRequest) returns (GetAllMessageStatusesReply); 
  rpc GetAllFeatureActivations(GetAllConfigRequest) returns (GetAllFeatureActivationsReply);
  rpc GetAllAgreements(GetAllConfigRequest) returns (GetAllAgreementsReply);
}

message GetActiveDocumentTemplatesRequest {
  string consumer_id = 1;
}

message GetActiveDocumentTemplatesReply {
  repeated string document_templates = 3;
}

message GetReflowConfigReply {
    repeated ReflowDto reflows = 1;
}

message QuestionnaireDto {
    string instance_namespace = 1;
    string display_name = 2;
    string description = 3;
    string icon_name = 4;
    string formDefinition = 5;
    string b2cTitle = 6;
}

message GetQuestionnaireReply {
    QuestionnaireDto config = 1;
}

message FeatureActivationDto {
    string instance_namespace = 1;
    string display_name = 2;
    string description = 3;
    string icon_name = 4;
    string scope = 5;
    string billing_metric_namespace = 6;
}

message GetAllFeatureActivationsReply {
   repeated FeatureActivationDto list = 1;
}

message GetAllQuestionnairesReply {
    repeated QuestionnaireDto list = 1;
}

message MessageStatusDto {
    string instance_namespace = 1;
    string display_name = 2;
    string description = 3;
    string icon_name = 4;
    bool isFinal = 5;
}

message GetAllMessageStatusesReply {
    repeated MessageStatusDto list = 1;
}

message AgreementDto {
    string instance_namespace = 1;
    string display_name = 2;

    repeated FeatureToggleDto feature_toggles = 3;
    repeated FeatureActivationPriceDto feature_activation_prices = 4;
    repeated ConsumptionMetricPriceDto consumption_metric_prices = 5;
}

message FeatureToggleDto {
    string instance_namespace = 1;
}

message FeatureActivationPriceDto {
    string instance_namespace = 1;
}

message ConsumptionMetricPriceDto {
    string instance_namespace = 1;
}

message GetAllAgreementsReply {
    repeated AgreementDto agreements = 1;
}

message ReflowDto {
    string target_namespace = 1;
    repeated ReflowPipelineDto pipelines = 2;
}

message ReflowPipelineDto {
    string name = 1;
    repeated ReflowActionDto actions = 2;
}

message ReflowActionDto {
  string id = 1;
  string actionNamespace = 2;
  double priority = 3;
  string modifier = 4;
  bool async = 5;
  string params = 6;
  string ui_params = 7;
  bool continue_on_error = 8;
  string messages = 9;
}

message GetImageTagRequest {
}

message GetImageTagReply {
    string image = 1;
}

message GetAllDatanodesByConfigNameRequest {
    string config_name = 1;
}

message GetAllDatanodesRequest {
    string consumer_id = 1;
    string actor_id = 2;
}

message GetManyDatanodesRequest{
    string consumer_id = 1;
    repeated string namespaces = 2;
    string actor_id = 3;
}

message GetSingleDatanodeRequest{
    string consumer_id = 1;
    string namespace = 2;
    string actor_id = 3;
}

message GetAllAccessReply {
    repeated AccessConfigDto configs = 1;
}

message AccessConfigDto {
    string instance_namespace = 1;
    string display_name = 2;
    string description = 3;
    string icon_name = 4;
    double priority = 5;
}

message GetThemeConfigReply {
    string json = 1;
}

message GetContentConfigReply{
    string json = 1;
}


message GetAllNotificationsReply {
    repeated NotificationDto configs = 1;
}

message GetNotificationReply{
    NotificationDto config = 1;
}

message NotificationDto{
 	string instance_namespace = 1;
    string body = 2;
    string title = 3;
    bool canShowOnCustomerPortal = 4;
    string display_name = 5;
    string description = 6;
    string audience_level = 7;
}

message GetAllCountriesReply {
    repeated CountryDto configs = 1;
}

message GetCountryReply{
    CountryDto config = 1;
}

message CountryDto{
    string display_name = 1;
    string icon_name = 2;
    double priority = 3;
    string iso3166_alpha2 = 4;
    string iso3166_alpha3 = 5;
    string iso3166_numeric = 6;
    string iso4217_currency = 7;
    string ccTLD = 8;
    string nato2_country_code = 9;
    string nato3_country_code = 10;
    string phone_prefix = 11;
    int32 phone_min_length = 12;
    int32 phone_max_length = 13;
    bool default = 14;
}

message GetAllConfigRequest {
    string consumer_id = 1;
}


message GetSingleConfigRequest {
    string consumer_id = 1;
	string namespace = 2;
}

message GetManyConfigRequest {
    string consumer_id = 1;
	repeated string namespaces = 2;
}

message GetManyWildcardConfigRequest {
    string consumer_id = 1;
	repeated string wildcards = 2;
}

message GetTypesRequest {

}

message GetAllUnitOfMeasureGroupsReply {
    repeated UnitOfMeasureGroupDto configs = 1;
}

message UnitOfMeasureGroupDto {
    string namespace = 1;
    repeated UnitOfMeasureDto unit_of_measures = 2;
}


message GetAllfieldCalculatedTypesReply {
	repeated FieldCalculatedTypeDto configs = 1;
}

message GetAllFieldDataTypesReply {
	repeated FieldDataTypeDto configs = 1;
}

message GetAllUnitOfMeasuresReply {
	repeated UnitOfMeasureDto configs = 1;
}

message GetAllLocalizedDisplayNamesReply {
	repeated LocalizedDisplayNameDto configs = 1;
}


message LocalizedDisplayNameDto {
    string namespace = 1;
    string country_code = 2;
    string display_name = 3;
}

message UnitOfMeasureDto {
    string namespace = 1;
    string unit_of_measure_group_namespace = 2;
    repeated string allowed_field_types = 3;
    repeated string supported_conversion_to_unit_of_measures = 4;
    repeated LocalizedDisplayNameDto display_names = 5;
}

message GetAllVatCodesReply {
	repeated VatCodeDto configs = 1;
}

message VatCodeDto {
    string code = 1;
    string display_name = 2;
    double vat_percentage = 3;
}

message GetAllDistributionChannelsReply {
	repeated DistributionChannelDto configs = 1;
}

message GetDistributionChannelReply {
	DistributionChannelDto config = 1;
}

message DistributionChannelDto {
    string icon_name = 1;
    string instance_namespace = 2;
    string display_name = 3;
    bool distribute_disabled_cases = 4;
    bool enable_as_default = 5;
    bool include_sold_cases = 6;
    int32 sold_cases_days_period = 7;
    bool used_for_public_advertisement = 8;
    bool allow_delay_override = 9;
    bool include_in_public_profile = 10;
    bool include_in_match_engine = 11;
    bool manually_controlled = 12;
    string description = 13;
    int32 days_delayed = 14;
    repeated DistributionChannelCaseTypeDto included_case_types = 15;
}

message DistributionChannelCaseTypeDto {
    repeated string distributed_disabled_case_states = 1;
    string namespace = 2;
    string sold_state = 3;
    string sold_reason = 4;
    bool manually_controlled = 5;
}

message GetManyEntityfeaturesReply {
	repeated EntityfeatureDto configs = 1;
}

message GetAllEntityfeaturesReply {
	repeated EntityfeatureDto configs = 1;
}

message EntityfeatureDto {
    string instance_namespace = 1;
    string display_name = 2;
    string description = 3;
    string icon_name = 4;
    bool allowed_comment = 5;
}


message GetAllTemplatesReply {
	repeated TemplateDto configs = 1;
}


message GetTemplateReply {
	TemplateDto config = 1;
}

message TemplateDto {
    string instance_namespace = 1;
    repeated string allowed_process_namespaces = 2;
    repeated string allowed_entityfeature_namespaces = 3;
    repeated TemplateDatanodeDto allowed_datanodes = 4;
    repeated string allowed_tag_namespaces = 5;
}

message TemplateDatanodeDto {
    string instance_namespace = 1;
    bool allowed = 2;
    repeated string uis = 3;
}

message GetAllTrackedActivitiesReply {
	repeated TrackedActivityDto configs = 1;
}

message GetTrackedActivityReply {
	TrackedActivityDto config = 1;
}

message TrackedActivityDto {
    string instance_namespace = 1;
    string display_name = 2;
    string description = 3;
    string icon_name = 4;
    google.protobuf.StringValue title = 5;
    google.protobuf.StringValue body = 6;
    bool hidden = 7;
    bool allow_all_actor_namespaces = 10;
	repeated string audience_actor_namespaces = 11;
	bool allow_all_actor_roles = 12;
	repeated string audience_actor_roles = 13;
	bool update_latest_enabled = 14;
	int32 update_latest_time_window = 15;
	repeated string index_on_datanode_namespaces = 16;
	bool updateLatest_always = 17;
    NotificationEventsDto notification_settings = 18;
}

message GetAllRemindersReply {
	repeated ReminderDto configs = 1;
}

message GetReminderReply {
	ReminderDto config = 1;
}

message ReminderDto {
    string instance_namespace = 1;
    string display_name = 2;
    string description = 3;
    string icon_name = 4;
    string template_target_namespace = 6;
}

message GetAllConfirmationsReply {
	repeated ConfirmationDto configs = 1;
}

message GetConfirmationReply {
	ConfirmationDto config = 1;
}

message ConfirmationDto {
    string instance_namespace = 1;
    string display_name = 2;
    string description = 3;
    string icon_name = 4;
    string template_target_namespace = 6;
}

message GetAllTagsReply {
	repeated TagDto configs = 1;
}

message GetManyTagsReply {
	repeated TagDto configs = 1;
}


message GetTagReply {
	TagDto config = 1;
}

message TagDto {
string instance_namespace = 1;
string display_name = 2;
string description = 3;
string icon_name = 4;
}

message GetAllPermissionsReply {
	repeated PermissionDto configs = 1;
}


message GetPermissionReply {
	PermissionDto config = 1;
}

message GetConfigNamesRequest {

}

message GetConfigNamesReply {
    repeated string configName = 1;
}


message GetConsumerConfigNameRequest {
    string id = 1;
}

message GetConsumerConfigNameReply {
    string configName = 1;
}

message SetConsumerConfigNameRequest {
    string id = 1;
    string configName = 2;
}

message SetConsumerConfigNameReply {
    bool success = 1;
    string message = 2;
}

message PermissionDto {
    string instance_namespace = 1;
    FullAccessPermissionLevelDto full_access_permission_level = 2;
    ReadAccessPermissionLevelDto read_access_permission_level = 3;
    InheritanceLevelDto inheritance_level = 4;
    repeated SharingRuleDto sharing_rules = 5;
}

message SharingRuleDto {
    SharingRoleDto role = 1;
    repeated string roles = 2;
    DataTreeLevelDto datatree_level = 3;
    repeated string permissions = 4;
    bool state_category = 5;
    repeated string state_categories = 6;
}

enum SharingRoleDto {
    SharingRole_any = 0;
    SharingRole_specific = 1;
}

enum DataTreeLevelDto {
    DataTreeLevel_Root = 0;
    DataTreeLevel_Scope = 1;
    DataTreeLevel_Parent = 2;
}

enum FullAccessPermissionLevelDto {
    FullAccess_Owner = 0;
    FullAccess_ResourceGroup = 1;
    FullAccess_Datastore = 2;
    FullAccess_Tenant = 3;
    FullAccess_Chain = 4;
    FullAccess_ChainMembers = 5;
    FullAccess_KnownUsers = 6;
    FullAccess_AnonymousUsers = 7;
}

enum ReadAccessPermissionLevelDto {
    ReadAccess_None = 0;
    ReadAccess_ResourceGroup = 1;
    ReadAccess_Datastore = 2;
    ReadAccess_Tenant = 3;
    ReadAccess_Chain = 4;
    ReadAccess_ChainMembers = 5;
    ReadAccess_KnownUsers = 6;
    ReadAccess_AnonymousUsers = 7;
}

enum InheritanceLevelDto {
    Inheritance_None = 0;
    Inheritance_Root = 1;
    Inheritance_Scope = 2;
    Inheritance_Parent = 3;
}


message GetAllIconsReply {
    repeated IconDto icons = 1;
}

message IconDto {
    string icon_name = 1;
    string icon_html = 2;
}
message GetAllNamespacesReply {
	repeated NamespaceDto configs = 1;
}

message GetNamespaceReply {
	NamespaceDto config = 1;
}

message NamespaceDto {
    string description = 1;
    string display_name = 2;
    string instance_namespace= 4;
    string icon_name= 5;
    google.protobuf.StringValue short_display_name = 6;
}

message GetAllStateflowsReply{
	string consumer_id = 1;
	repeated StateflowDto configs = 2;
}

message StateflowDto {
    string description = 1;
    string display_name = 2;
    string namespace = 3;
    string stateflow_coco_version = 4;
    repeated StateRepresentationDto states = 5;
    bool automatic_state_reasoning = 6;
}

message StateRepresentationDto {
    string display_name = 1;
    string namespace = 2;
    string category = 3;
    string description = 4;
    bool initial = 5;
    bool transient = 6;
    repeated StateTriggerDto trigger_behaviours = 8;
}

message StateTriggerDto {
    string reason =1;
    string namespace =2;
    string destination_state =3;
    string description =4;
    bool is_reentrant =6;
    repeated StateTriggerEndResultOutcomeDto  end_result_outcomes = 7;
    string pipeline_identifier = 8;
}

message StateTriggerEndResultOutcomeDto
{
    string end_result_type_namespace = 1;
    string end_result_outcome_namespace = 2;
}

message GetStateflowReply {
    StateflowDto config = 1;
}


message GetAllDataNodesReply {
    repeated DatanodeCocoDto configs = 1;
}

message GetManyDataNodesReply {
    repeated DatanodeCocoDto configs = 1;
}

message GetDataNodeReply {
    DatanodeCocoDto config = 1;
    bool configMissing = 2;
}

message GetAllPriceUnitsReply {
    repeated PriceUnitCocoDto priceUnits = 1;
}

message GetAllProductTypesReply {
    repeated ProductTypeCocoDto productTypes = 1;
}

message GetAllProductChannelsReply {
    repeated ProductChannelCocoDto productChannels = 1;
}

message GetAllVatRatesReply {
    repeated VatRateCocoDto vatRates = 1;
}

message GetPolicyReply {
  map<string, string> policies = 1;
}

enum InformationSensivityLevelDto {
    NoSensitiveData = 0;
    MaybeSensitiveData = 1;
    SensitiveData = 2;
}

enum HandlingLevelDto {
    None = 0;
    Parent = 1;
    Scope = 2;
    Root = 3;
}

message LevelHandlingDto {
    bool AllowOnlyOneOfThisType = 1;
    bool CanRemovePrimary = 2;
    HandlingLevelDto Level = 3;
    string OverrideTypeKey = 4;
}

message ManagedFieldDto {
    string namespace = 1;
    string display_name = 3;
    string description = 4;
    repeated ManagedFieldFragmentDto fragments = 2;
}

message ManagedFieldFragmentDto {
    repeated string alternative_unit_of_measure_namespaces = 2;
    string calculate_datanode_instance_type_namespace = 3;
    string calculate_datanode_level = 4;
    bool calculate_managed_field_allow_manual_override = 5;
    string calculate_managed_field_fragment_namespace = 6;
    string calculate_managed_field_namespace = 7;
    string custom_calculation_namespace = 8;
    string display_name = 9;
    string field_calculated_type_namespace = 10;
    string field_data_type_namespace = 11;
    string fragment_namespace = 12;
    bool is_calculated = 13;
    bool is_required = 14;
    string list_value_type_managed_field_namespace = 15;
    string managed_field_namespace = 16;
    google.protobuf.Int64Value max_length = 17;
    google.protobuf.DoubleValue max_value = 18;
    google.protobuf.Int64Value min_length = 19;
    google.protobuf.DoubleValue min_value = 20;
    google.protobuf.Int32Value number_of_decimals = 21;
    string primary_unit_of_measure_namespace = 22;
    string vat_code = 23;
    FieldDataTypeDto field_data_type = 24;
    FieldCalculatedTypeDto field_calculated_type = 25;
	repeated FieldOptionListItemDto option_list = 26;
}

message FieldOptionListItemDto {
    string displayName = 1;
    string value = 2;
}

message FieldCalculatedTypeDto {
    string namespace = 1;
}

message FieldDataTypeDto {
    string namespace=1;
    FieldValueTypeDto value_type=2;
    bool supports_min_max_value=3;
    bool supports_min_max_length=4;
    bool supports_decimals=5;
    bool supports_default_value=6;
    bool is_list_type=7;
    repeated LocalizedDisplayNameDto display_names = 8;
}

enum FieldValueTypeDto
    {
        UniversalTime = 0;
        DateTime = 1;
        Currency = 2;
        Bool = 3;
        Number = 4;
        BigNumber = 5;
        DecimalNumber = 6;
        BigDecimalNumber = 7;
        Text = 8;
        Note = 9;
        Blob = 10;
        Complex = 11;
        List = 12;
        CalculateTotal = 13;
        CalculateCount = 14;
        CalculateMin = 15;
        CalculateMax = 16;
        CalculateMean = 17;
        CalculateNewest = 18;
        CalculateOldest = 19;
		OptionList = 20;
    }


message NotificationEventsDto {
    NotificationEventSettingsDto commit = 1;
    NotificationEventSettingsDto view = 2;
    NotificationEventSettingsDto update = 3;
    NotificationEventSettingsDto delete = 4;
}

message NotificationEventSettingsDto {
    bool first_only = 1;
    string namespace = 2;
    bool send_to_executing_actor = 3;
    bool send_to_case_agents = 4;
    bool send_to_resource_group_employees = 5;
    bool send_to_primary_resource_group_employees = 6;
    bool send_to_tenant_employees = 7;
    bool send_to_primary_tenant_employees = 8;
    repeated string executing_actor_namespace_filters = 9;
    google.protobuf.StringValue navigation_namespace = 10;
    bool send_to_responsible_actor = 11;
}
message DatanodeCocoDto {
    AllowedSharingLevelsDto allowed_sharing_levels = 1;
    bool can_prepare_public_profile = 2;
    bool create_as_hidden = 3;
    string description = 4;
    string display_name = 5;
    google.protobuf.StringValue handler_namespace = 6;
    string icon_name = 17;
    bool include_in_match_engine = 7;
    bool include_in_public_profile = 8;
    InformationSensivityLevelDto information_sensivity_level = 9;
    string instance_namespace = 10;
    bool is_defining_scope = 16;
    LevelHandlingDto level_handling = 11;
    repeated ManagedFieldDto managed_fields = 12;
    NotificationEventsDto notification_settings = 13;
    string state_flow_namespace = 14;
    bool suppress_scope_update = 15;
    map<string, string> additional_properties = 18;
    google.protobuf.StringValue tracked_activity_namespace = 19;
    bool is_navigable = 20;
    string specifics_json = 21;
    bool state_flow_disabled = 22;
    string state_flow_picker_type = 23;
    google.protobuf.StringValue short_display_name = 24;
    bool include_path_details_in_search_index = 25;
    UploadFileCocoDto upload_file = 26;
}

message UploadFileCocoDto {
    google.protobuf.StringValue mime_types_filters = 1;
    google.protobuf.StringValue regex_filter = 2;
    int64 max_size = 3;
}

message AllowedSharingLevelsDto {
    bool anonymous = 1;
    bool anyUser = 2;
    bool chain = 3;
    bool chainMember = 4;
}

message ActorConfigDto {
    string address_type_namespace = 1;
    string email_type_namespace = 2;
    string phone_type_namespace = 3;
    string so_me_type_namespace = 4;
    repeated string allowed_primary_contact_actor_types = 5;
    string default_notebook_namespace = 6;
}

message ActorRoleConfigDto {
    bool never_show_contact_info = 1;
    bool allow_to_view_in_customer_portal = 2;
    repeated string allowed_actors = 3;
    bool AutoUpdateCachedActorInformation = 4;
    repeated string categories = 5;
    string unknown_actor_display_name = 6;
    string instance_namespace = 7;
    bool is_selectable = 8;
    bool is_non_participant_role = 9;
    google.protobuf.StringValue endUserRemovedStateNamespace = 10;
    google.protobuf.StringValue endUserRemovedStateReasonNamespace = 11;
}

message AppointmentConfigDto{
    string AddressTypeNamespace = 1;
}

message GetActorConfigReply{
    ActorConfigDto config = 1;
}

message GetActorRoleConfigReply{
    ActorRoleConfigDto config = 1;
}

message GetManyActorRolesConfigReply{
    repeated ActorRoleConfigDto configs = 1;
}

message GetAppointmentConfigReply{
    AppointmentConfigDto config = 1;
}

message GetCampaignConfigReply{
    CampaignConfigDto config = 1;
}

message CampaignConfigDto{
    string campaign_extension_id = 1;
}

message CaseConfigDto {
    string project_case_reference_type = 1;
    bool is_case_collection = 2;
    repeated AllowedCaseRoleDto allowed_roles_on_create = 3;
}

message AllowedCaseRoleDto {
    string role_namespace = 1;
    bool allow_multiple = 2;
    int32 order = 3;
    bool default = 4;
    bool default_to_current_employee = 5;
}

message GetCaseConfigReply {
    CaseConfigDto config = 1;
}

message ConsentConfigDto {
    string title = 1;
    string long_description = 2;
    string short_description = 3;
    ConsentScopeCocoDto consent_scope = 4;
    bool is_rejectable = 5;
    bool is_checked_by_default = 6;
    repeated ConsentAccessTypeDto consent_access_types = 7;
    int32 version = 8;
}

message ConsentAccessTypeDto {
    string instance_namespace = 1;
    bool is_active = 2;
    string display_name = 3;
    string icon_name = 4;
}

enum ConsentScopeCocoDto {
    TenantLevel = 0;
    ResourceGroupLevel = 1;
    Scoped = 2;
}

message GetConsentConfigReply {
    ConsentConfigDto config = 1;
}

message EstateConfigDto {
    string address_type_namespace = 1;
}

message IeUrlConfigDto {
    string url_template= 1;
    string url_type = 2;
    string default_channel_namespace = 3;
    repeated IeUrlChannelDto channels = 4;
}

message IeUrlChannelDto {
    string channel_namespace = 1;
    string icon_name = 2;
    string display_name = 3;
}
message LawRegulationConfigDto {
    repeated LawRegulationItemDto lawregulations = 1;
}

message LawRegulationItemDto {
    string namespace = 1;
    string icon_name = 2;
    string display_name = 3;
    bool enabled_by_default= 4;
    string description = 5;
}


message ToDoConfigDto {
    google.protobuf.StringValue incomplete_reasons= 1;
    google.protobuf.StringValue complete_reasons = 2;
    google.protobuf.BoolValue allowCustomerSelfService = 3;
    google.protobuf.BoolValue enableSelfServiceByDefault = 4;
    google.protobuf.StringValue customerSelfServiceRejectedStateNamespace = 5;
    google.protobuf.StringValue customerSelfServiceRejectedReasonNamespace = 6;
    google.protobuf.StringValue customerSelfServiceCompletedStateNamespace = 7;
    google.protobuf.StringValue customerSelfServiceCompletedReasonNamespace = 8;
}

message GetEstateConfigReply {
    EstateConfigDto config = 1;
}
message GeIeUrlConfigReply {
    IeUrlConfigDto config = 1;
}
message GetLawRegulationConfigReply {
    LawRegulationConfigDto config = 1;
}
message GetToDoConfigReply {
  ToDoConfigDto config = 1;
}

message GetAdtextReply {
    AdtextConfigDto config = 1;
}

message AdtextConfigDto {
    repeated AdtextCategoryDto categories = 1;
}

message AdtextCategoryDto {
    string display_name = 1;
}


message GetWishConfigReply {
    WishConfigDto config = 1;
}
message WishConfigDto {
    repeated RangeTypeReferenceDto range_type_references = 1;
    repeated string case_type_references = 2;
    repeated string estate_type_references = 3;
    LocationTypeReferenceDto location_type_reference = 4;
    string basic_reference_id_usage = 5;
    string basic_description_usage = 6;
    MatchSettingsDto match_settings = 7;
    repeated string entityfeature_type_references = 8;
    string living_area_range_namespace = 9;
    string price_range_namespace = 10;

}

message RangeTypeReferenceDto {
    double priority = 1;
    string instance_namespace = 2;
}

message LocationTypeReferenceDto {
    LocationItemTypeReferenceDto city_type_reference = 1;
    LocationItemTypeReferenceDto street_type_reference = 2;
    LocationItemTypeReferenceDto address_type_reference = 3;
    LocationItemTypeReferenceDto municipality_type_reference = 4;
    LocationItemTypeReferenceDto region_type_reference = 5;
    LocationItemTypeReferenceDto place_type_reference = 6;
    LocationItemTypeReferenceDto province_type_reference = 7;
    LocationItemTypeReferenceDto supplementary_city_type_reference = 8;
    LocationItemTypeReferenceDto polygon_type_reference = 9;
}
message LocationItemTypeReferenceDto {
    string location_type_namespace = 1;
    double priority = 2;
    string usage = 3;
}

message MatchSettingsDto {
    bool instant = 1;
    bool daily = 2;
    bool weekly = 3;
}

message PriceUnitCocoDto {
    string namespace = 1;
    string displayName = 2;
    int32 priority = 3;
}

message ProductTypeCocoDto {
    string namespace = 1;
    string displayName = 2;
    bool active = 3;
    int32 priority = 4;
    repeated ProductCategoryCocoDto categories = 5;
}

message ProductCategoryCocoDto {
    string namespace = 1;
    string displayName = 2;
    bool active = 3;
    int32 priority = 4;
}

message ProductChannelCocoDto {
    string namespace = 1;
    string displayName = 2;
    bool active = 3;
    int32 priority = 4;
    repeated string allowedProductCategories = 5;
}

message VatRateCocoDto {
    string namespace = 1;
    string displayName = 2;
    bool active = 3;
    int32 priority = 4;
    bool default = 5;
    VatDefinitionCocoDto vatDefinition = 6;
}

message VatDefinitionCocoDto {
    bool undefined = 1;
    double percent = 2;
}

message UiOptionListCocoDto {
    string label = 1;
    string description = 2;
    string options = 3;
    string namespace = 4;
}

message GetAllUiOptionListsReply {
    repeated UiOptionListCocoDto lists = 1;
}

message GetAllActorPickerFiltersReply{
    repeated ActorPickerFiltersCocoDto lists = 1;
}

message ActorPickerFiltersCocoDto{
    string context_namespace = 1;
    repeated ActorPickerFilterCocoDto create = 2;
    repeated ActorPickerFilterCocoDto view = 3;
}

message ActorPickerFilterCocoDto{
    string listNamespace = 1;
    repeated string allowed_actor_types = 2;
}

message GetAllGroupsReply {
    repeated GroupCocoDto lists = 1;
}

message GroupCocoDto {
    string label = 1;
    string description = 2;
    repeated GroupItemCocoDto items = 3;
    string group_namespace = 4;
}

message GroupItemCocoDto {
    string item_namespace = 1;
    double priority = 2;
}

message GetListDefinitionReply {
    ListDefinitionCocoDto listDefinition = 1;
}

message GetAllListDefinitionsReply {
    repeated ListDefinitionCocoDto listDefinitions = 1;
}

message ListDefinitionCocoDto {
    string namespace = 1;
    string displayName = 2;
    repeated string listContent = 3;
    repeated ColumnDefinitionDto columns = 4;
}

message ColumnDefinitionDto {
  string namespace = 1;
  int32 order = 2;
}

message GetSmsCommandReply {
   SmsCommandConfigDto config = 1;
}

message SmsCommandConfigDto {
    string instance_namespace = 1;
    int32 timeout_in_minutes = 2;
    int32 Timeout_grace_period_in_minutes = 3;
    string queue_destination_address = 4;
    string challenge_template_target_namespace = 5;
    string accepted_response_template_target_namespace = 6;
    string rejected_response_template_target_namespace = 7;
    CommandMapping CommandMapping = 8;
    string description = 9;
    string display_name = 10;
    string icon_name = 11;
}

message GetAllSmsCommandReply{
    repeated SmsCommandConfigDto lists = 1;
}

message CommandMapping {
    repeated CommandDto commands = 1;
}

message CommandDto {
    string name = 1;
    repeated string responses = 2;
}