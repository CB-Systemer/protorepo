syntax = "proto3";

option csharp_namespace = "Coco.Api";
import "google/protobuf/wrappers.proto";

service CocoApi {
  rpc GetPolicy (GetAllConfigRequest) returns (GetPolicyReply);
  rpc GetDataNode (GetSingleDatanodeRequest) returns (GetDataNodeReply);
  rpc GetStateflow (GetSingleConfigRequest) returns (GetStateflowReply);
  rpc GetAllStateflows (GetAllConfigRequest) returns (GetAllStateflowsReply);
  rpc GetAllAccess (GetAllConfigRequest) returns (GetAllAccessReply);
  rpc GetAllDataNodes (GetAllDatanodesRequest) returns (GetAllDataNodesReply);
  rpc GetManyDataNodes (GetManyDatanodesRequest) returns (GetManyDataNodesReply);
  rpc GetAllNamespaces(GetAllConfigRequest) returns (GetAllNamespacesReply);
  rpc GetNamespace(GetSingleConfigRequest) returns (GetNamespaceReply);
  rpc GetAllNotifications(GetAllConfigRequest) returns (GetAllNotificationsReply);
  rpc GetNotification(GetSingleConfigRequest) returns (GetNotificationReply);
  rpc GetAllPermissions(GetAllConfigRequest) returns (GetAllPermissionsReply);
  rpc GetPermission(GetSingleConfigRequest) returns (GetPermissionReply);
  rpc GetAllTags(GetAllConfigRequest) returns (GetAllTagsReply);
  rpc GetTag(GetSingleConfigRequest) returns (GetTagReply);
  rpc GetManyTags(GetManyConfigRequest) returns (GetManyTagsReply);
  rpc GetAllTemplates(GetAllConfigRequest) returns (GetAllTemplatesReply);
  rpc GetTemplate(GetSingleConfigRequest) returns (GetTemplateReply);
  rpc GetAllTrackedActivities(GetAllConfigRequest) returns (GetAllTrackedActivitiesReply);
  rpc GetTrackedActivity(GetSingleConfigRequest) returns (GetTrackedActivityReply);
  rpc GetManyEntityfeatures(GetManyConfigRequest) returns (GetManyEntityfeaturesReply);
  rpc GetAllEntityfeatures(GetAllConfigRequest) returns (GetAllEntityfeaturesReply);
  rpc GetDistributionChannel(GetSingleConfigRequest) returns (GetDistributionChannelReply);
  rpc GetAllDistributionChannels(GetAllConfigRequest) returns (GetAllDistributionChannelsReply);
  rpc GetAllVatCodes(GetTypesRequest) returns (GetAllVatCodesReply);
  rpc GetAllUnitOfMeasures(GetTypesRequest) returns (GetAllUnitOfMeasuresReply);
  rpc GetAllUnitOfMeasureGroups(GetTypesRequest) returns (GetAllUnitOfMeasureGroupsReply);
  rpc GetAllLocalizedDisplayNames(GetTypesRequest) returns (GetAllLocalizedDisplayNamesReply);
  rpc GetAllFieldDataTypes(GetTypesRequest) returns (GetAllFieldDataTypesReply);
  rpc GetAllfieldCalculatedTypes(GetTypesRequest) returns (GetAllfieldCalculatedTypesReply);
  rpc GetWishConfig(GetSingleConfigRequest) returns (GetWishConfigReply);
  rpc GetCaseConfig(GetSingleConfigRequest) returns (GetCaseConfigReply);
  rpc GetConsentConfig(GetSingleConfigRequest) returns (GetConsentConfigReply);
  rpc GetActorConfig(GetSingleConfigRequest) returns (GetActorConfigReply);
  rpc GetActorRoleConfig(GetSingleConfigRequest) returns (GetActorRoleConfigReply);
  rpc GetManyActorRolesConfig(GetManyConfigRequest) returns (GetManyActorRolesConfigReply);
  rpc GetAppointmentConfig(GetSingleConfigRequest) returns (GetAppointmentConfigReply);
  rpc GetCampaignConfig(GetSingleConfigRequest) returns (GetCampaignConfigReply);
  rpc GetEstateConfig(GetSingleConfigRequest) returns (GetEstateConfigReply);
  rpc GeIeUrlConfig(GetSingleConfigRequest) returns (GeIeUrlConfigReply);
  rpc GetLawRegulationConfig(GetSingleConfigRequest) returns (GetLawRegulationConfigReply);
  rpc GetToDoConfig(GetSingleConfigRequest) returns (GetToDoConfigReply);
  rpc GetAdtextConfig(GetSingleConfigRequest) returns (GetAdtextReply);
  rpc GetThemeConfig(GetSingleConfigRequest) returns (GetThemeConfigReply);
  rpc GetContentConfig(GetSingleConfigRequest) returns (GetContentConfigReply);
  rpc GetAllIcons(GetAllConfigRequest) returns (GetAllIconsReply);
}

message GetAllDatanodesRequest {
    string consumer_id = 1;
    string actor_id = 2;
}

message GetManyDatanodesRequest{
    string consumer_id = 1;
    repeated string namespaces = 2;
    string actor_id = 3;
}

message GetSingleDatanodeRequest{
    string consumer_id = 1;
    string namespace = 2;
    string actor_id = 3;
}

message GetAllAccessReply {
    string json = 1;
}

message AccessDto {
    
}

message GetThemeConfigReply {
    string json = 1;
}

message GetContentConfigReply{
    string json = 1;
}


message GetAllNotificationsReply {
    repeated NotificationDto configs = 1;
}

message GetNotificationReply{
    NotificationDto config = 1;
}

message NotificationDto{
 	string instance_namespace = 1;
    string body = 2;
    string title = 3;
    bool canShowOnCustomerPortal = 4;
    string display_name = 5;
    string description = 6;
    string audience_level = 7;
}

message GetAllConfigRequest {
    string consumer_id = 1;
}


message GetSingleConfigRequest {
    string consumer_id = 1;
	string namespace = 2;
}

message GetManyConfigRequest {
    string consumer_id = 1;
	repeated string namespaces = 2;
}

message GetTypesRequest {

}

message GetAllUnitOfMeasureGroupsReply {
    repeated UnitOfMeasureGroupDto configs = 1;
}

message UnitOfMeasureGroupDto {
    string namespace = 1;
    repeated UnitOfMeasureDto unit_of_measures = 2;
}


message GetAllfieldCalculatedTypesReply {
	repeated FieldCalculatedTypeDto configs = 1;
}

message GetAllFieldDataTypesReply {
	repeated FieldDataTypeDto configs = 1;
}

message GetAllUnitOfMeasuresReply {
	repeated UnitOfMeasureDto configs = 1;
}

message GetAllLocalizedDisplayNamesReply {
	repeated LocalizedDisplayNameDto configs = 1;
}


message LocalizedDisplayNameDto {
    string namespace = 1;
    string country_code = 2;
    string display_name = 3;
}

message UnitOfMeasureDto {
    string namespace = 1;
    string unit_of_measure_group_namespace = 2;
    repeated string allowed_field_types = 3;
    repeated string supported_conversion_to_unit_of_measures = 4;
    repeated LocalizedDisplayNameDto display_names = 5;
}

message GetAllVatCodesReply {
	repeated VatCodeDto configs = 1;
}

message VatCodeDto {
    string code = 1;
    string display_name = 2;
    double vat_percentage = 3;
}

message GetAllDistributionChannelsReply {
	repeated DistributionChannelDto configs = 1;
}

message GetDistributionChannelReply {
	DistributionChannelDto config = 1;
}

message DistributionChannelDto {
    string icon_name = 1;
    string instance_namespace = 2;
    string display_name = 3;
    bool distribute_disabled_cases = 4;
    bool enable_as_default = 5;
    bool include_sold_cases = 6;
    int32 sold_cases_days_period = 7;
    bool used_for_public_advertisement = 8;
    bool allow_delay_override = 9;
    bool include_in_public_profile = 10;
    bool include_in_match_engine = 11;
    bool manually_controlled = 12;
    string description = 13;
    int32 days_delayed = 14;
    repeated DistributionChannelCaseTypeDto included_case_types = 15;
}

message DistributionChannelCaseTypeDto {
    repeated string distributed_disabled_case_states = 1;
    string namespace = 2;
    string sold_state = 3;
    string sold_reason = 4;
    bool manually_controlled = 5;
}

message GetManyEntityfeaturesReply {
	repeated EntityfeatureDto configs = 1;
}

message GetAllEntityfeaturesReply {
	repeated EntityfeatureDto configs = 1;
}

message EntityfeatureDto {
    string instance_namespace = 1;
    string display_name = 2;
    string description = 3;
    string icon_name = 4;
    bool allowed_comment = 5;
}


message GetAllTemplatesReply {
	repeated TemplateDto configs = 1;
}


message GetTemplateReply {
	TemplateDto config = 1;
}

message TemplateDto {
    string instance_namespace = 1;
    repeated string allowed_process_namespaces = 2;
    repeated string allowed_entityfeature_namespaces = 3;
    repeated TemplateDatanodeDto allowed_datanodes = 4;
    repeated string allowed_tag_namespaces = 5;
}

message TemplateDatanodeDto {
    string instance_namespace = 1;
    bool allowed = 2;
    repeated string uis = 3;
}

message GetAllTrackedActivitiesReply {
	repeated TrackedActivityDto configs = 1;
}

message GetTrackedActivityReply {
	TrackedActivityDto config = 1;
}

message TrackedActivityDto {
    string instance_namespace = 1;
    string display_name = 2;
    string description = 3;
    string icon_name = 4;
    google.protobuf.StringValue title = 5;
    google.protobuf.StringValue body = 6;
    bool hidden = 7;
    bool allow_all_actor_namespaces = 10;
	repeated string audience_actor_namespaces = 11;
	bool allow_all_actor_roles = 12;
	repeated string audience_actor_roles = 13;
	bool update_latest_enabled = 14;
	int32 update_latest_time_window = 15;
	repeated string index_on_datanode_namespaces = 16;
	bool updateLatest_always = 17;
}

message GetAllTagsReply {
	repeated TagDto configs = 1;
}

message GetManyTagsReply {
	repeated TagDto configs = 1;
}


message GetTagReply {
	TagDto config = 1;
}

message TagDto {
string instance_namespace = 1;
string display_name = 2;
string description = 3;
string icon_name = 4;
}

message GetAllPermissionsReply {
	repeated PermissionDto configs = 1;
}


message GetPermissionReply {
	PermissionDto config = 1;
}

message PermissionDto {
    string instance_namespace = 1;
    FullAccessPermissionLevelDto full_access_permission_level = 2;
    ReadAccessPermissionLevelDto read_access_permission_level = 3;
    InheritanceLevelDto inheritance_level = 4;
    repeated SharingRuleDto sharing_rules = 5;
}

message SharingRuleDto {
    SharingRoleDto role = 1;
    repeated string roles = 2;
    DataTreeLevelDto datatree_level = 3;
    repeated string permissions = 4;
    bool state_category = 5;
    repeated string state_categories = 6;
}

enum SharingRoleDto {
    SharingRole_any = 0;
    SharingRole_specific = 1;
}

enum DataTreeLevelDto {
    DataTreeLevel_Root = 0;
    DataTreeLevel_Scope = 1;
    DataTreeLevel_Parent = 2;
}

enum FullAccessPermissionLevelDto {
    FullAccess_Owner = 0;
    FullAccess_ResourceGroup = 1;
    FullAccess_Datastore = 2;
    FullAccess_Tenant = 3;
    FullAccess_Chain = 4;
    FullAccess_ChainMembers = 5;
    FullAccess_KnownUsers = 6;
    FullAccess_AnonymousUsers = 7;
}

enum ReadAccessPermissionLevelDto {
    ReadAccess_None = 0;
    ReadAccess_ResourceGroup = 1;
    ReadAccess_Datastore = 2;
    ReadAccess_Tenant = 3;
    ReadAccess_Chain = 4;
    ReadAccess_ChainMembers = 5;
    ReadAccess_KnownUsers = 6;
    ReadAccess_AnonymousUsers = 7;
}

enum InheritanceLevelDto {
    Inheritance_None = 0;
    Inheritance_Root = 1;
    Inheritance_Scope = 2;
    Inheritance_Parent = 3;
}


message GetAllIconsReply {
    repeated IconDto icons = 1;
}

message IconDto {
    string icon_name = 1;
    string icon_html = 2;
}
message GetAllNamespacesReply {
	repeated NamespaceDto configs = 1;
}

message GetNamespaceReply {
	NamespaceDto config = 1;
}

message NamespaceDto {
    string description = 1;
    string display_name = 2;
    string instance_namespace= 4;
    string icon_name= 5;
}

message GetAllStateflowsReply{
	string consumer_id = 1;
	repeated StateflowDto configs = 2;
}

message StateflowDto {
    string description = 1;
    string display_name = 2;
    string namespace = 3;
    string stateflow_coco_version = 4;
    repeated StateRepresentationDto states = 5;
}

message StateRepresentationDto {
    string display_name = 1;
    string namespace = 2;
    string category = 3;
    string description = 4;
    bool initial = 5;
    bool transient = 6;
    repeated StateTriggerDto trigger_behaviours = 8;
}


message StateTriggerDto {
    string reason =1;
    string namespace =2;
    string destination_state =3;
    string description =4;
    bool is_reentrant =6;
    repeated StateTriggerEndResultOutcomeDto  end_result_outcomes = 7;
}

message StateTriggerEndResultOutcomeDto
{
    string end_result_type_namespace = 1;
    string end_result_outcome_namespace = 2;
}

message GetStateflowReply {
    StateflowDto config = 1;
}


message GetAllDataNodesReply {
    repeated DatanodeCocoDto configs = 1;
}


message GetManyDataNodesReply {
    repeated DatanodeCocoDto configs = 1;
}

message GetDataNodeReply {
    DatanodeCocoDto config = 1;
}

message GetPolicyReply {
  map<string, string> policies = 1;
}

enum InformationSensivityLevelDto {
    NoSensitiveData = 0;
    MaybeSensitiveData = 1;
    SensitiveData = 2;
}

enum HandlingLevelDto {
    None = 0;
    Parent = 1;
    Scope = 2;
    Root = 3;
}

message LevelHandlingDto {
    bool AllowOnlyOneOfThisType = 1;
    bool CanRemovePrimary = 2;
    HandlingLevelDto Level = 3;
}

message ManagedFieldDto {
    string namespace = 1;
    string display_name = 3;
    string description = 4;
    repeated ManagedFieldFragmentDto fragments = 2;
}

message ManagedFieldFragmentDto {
    repeated string alternative_unit_of_measure_namespaces = 2;
    string calculate_datanode_instance_type_namespace = 3;
    string calculate_datanode_level = 4;
    bool calculate_managed_field_allow_manual_override = 5;
    string calculate_managed_field_fragment_namespace = 6;
    string calculate_managed_field_namespace = 7;
    string custom_calculation_namespace = 8;
    string display_name = 9;
    string field_calculated_type_namespace = 10;
    string field_data_type_namespace = 11;
    string fragment_namespace = 12;
    bool is_calculated = 13;
    bool is_required = 14;
    string list_value_type_managed_field_namespace = 15;
    string managed_field_namespace = 16;
    google.protobuf.Int64Value max_length = 17;
    google.protobuf.DoubleValue max_value = 18;
    google.protobuf.Int64Value min_length = 19;
    google.protobuf.DoubleValue min_value = 20;
    google.protobuf.Int32Value number_of_decimals = 21;
    string primary_unit_of_measure_namespace = 22;
    string vat_code = 23;
    FieldDataTypeDto field_data_type = 24;
    FieldCalculatedTypeDto field_calculated_type = 25;

}

message FieldCalculatedTypeDto {
    string namespace = 1;
}

message FieldDataTypeDto {
    string namespace=1;
    FieldValueTypeDto value_type=2;
    bool supports_min_max_value=3;
    bool supports_min_max_length=4;
    bool supports_decimals=5;
    bool supports_default_value=6;
    bool is_list_type=7;
    repeated LocalizedDisplayNameDto display_names = 8;
}

enum FieldValueTypeDto
    {
        UniversalTime = 0;
        DateTime = 1;
        Currency = 2;
        Bool = 3;
        Number = 4;
        BigNumber = 5;
        DecimalNumber = 6;
        BigDecimalNumber = 7;
        Text = 8;
        Note = 9;
        Blob = 10;
        Complex = 11;
        List = 12;
        CalculateTotal = 13;
        CalculateCount = 14;
        CalculateMin = 15;
        CalculateMax = 16;
        CalculateMean = 17;
        CalculateNewest = 18;
        CalculateOldest = 19;
    }


message NotificationSettingsDto {
    NotificationCocoDto commit = 1;
    NotificationCocoDto view = 2;
    NotificationCocoDto update = 3;
    NotificationCocoDto delete = 4;
}

message NotificationCocoDto {
    bool first_only = 1;
    string namespace = 2;
    bool send_to_executing_actor = 3;
    bool send_to_case_agents = 4;
    bool send_to_resource_group_employees = 5;
    bool send_to_primary_resource_group_employees = 6;
    bool send_to_tenant_employees = 7;
    bool send_to_primary_tenant_employees = 8;
    repeated string executing_actor_namespace_filters = 9;
}
message DatanodeCocoDto {
    AllowedSharingLevelsDto allowed_sharing_levels = 1;
    bool can_prepare_public_profile = 2;
    bool create_as_hidden = 3;
    string description = 4;
    string display_name = 5;
    string handler_namespace = 6;
    string icon_name = 17;
    bool include_in_match_engine = 7;
    bool include_in_public_profile = 8;
    InformationSensivityLevelDto information_sensivity_level = 9;
    string instance_namespace = 10;
    bool is_defining_scope = 16;
    LevelHandlingDto level_handling = 11;
    repeated ManagedFieldDto managed_fields = 12;
    NotificationSettingsDto notification_settings = 13;
    string state_flow_namespace = 14;
    bool suppress_scope_update = 15;
    map<string, string> additional_properties = 18;
    google.protobuf.StringValue tracked_activity_namespace = 19;
    bool is_navigable = 20;
    string specifics_json = 21;
}

message AllowedSharingLevelsDto {
    bool anonymous = 1;
    bool anyUser = 2;
    bool chain = 3;
    bool chainMember = 4;
}

message ActorConfigDto {
    string address_type_namespace = 1;
    string email_type_namespace = 2;
    string phone_type_namespace = 3;
    string so_me_type_namespace = 4;
}

message ActorRoleConfigDto {
    bool never_show_contact_info = 1;
    bool allow_to_view_in_customer_portal = 2;
    repeated string allowed_actors = 3;
    bool AutoUpdateCachedActorInformation = 4;
    repeated string categories = 5;
    string unknown_actor_display_name = 6;
    string instance_namespace = 7;
    bool is_selectable = 8;
}

message AppointmentConfigDto{
    string AddressTypeNamespace = 1;
}

message GetActorConfigReply{
    ActorConfigDto config = 1;
}

message GetActorRoleConfigReply{
    ActorRoleConfigDto config = 1;
}

message GetManyActorRolesConfigReply{
    repeated ActorRoleConfigDto configs = 1;
}

message GetAppointmentConfigReply{
    AppointmentConfigDto config = 1;
}

message GetCampaignConfigReply{
    CampaignConfigDto config = 1;
}

message CampaignConfigDto{
    string campaign_extension_id = 1;
}

message CaseConfigDto {
    string project_case_reference_type = 1;
    bool is_case_collection = 2;
}

message GetCaseConfigReply {
    CaseConfigDto config = 1;
}

message ConsentConfigDto {
    string title = 1;
    string long_description = 2;
    string short_description = 3;
    ConsentScopeCocoDto consent_scope = 4;
    bool is_rejectable = 5;
    bool is_checked_by_default = 6;
    repeated ConsentAccessTypeDto consent_access_types = 7;
    int32 version = 8;
}

message ConsentAccessTypeDto {
    string instance_namespace = 1;
    bool is_active = 2;
    string display_name = 3;
    string icon_name = 4;
}

enum ConsentScopeCocoDto {
    TenantLevel = 0;
    ResourceGroupLevel = 1;
    Scoped = 2;
}

message GetConsentConfigReply {
    ConsentConfigDto config = 1;
}

message EstateConfigDto {
    string address_type_namespace = 1;
}

message IeUrlConfigDto {
    string url_template= 1;
    string url_type = 2;
    string default_channel_namespace = 3;
    repeated IeUrlChannelDto channels = 4;
}

message IeUrlChannelDto {
    string channel_namespace = 1;
    string icon_name = 2;
    string display_name = 3;
}
message LawRegulationConfigDto {
    repeated LawRegulationItemDto lawregulations = 1;
}

message LawRegulationItemDto {
     string namespace = 1;
    string icon_name = 2;
    string display_name = 3;
    bool enabled_by_default= 4;
    string description = 5;
}


message ToDoConfigDto {
    string incomplete_reasons= 1;
    string complete_reasons = 2;
}

message GetEstateConfigReply {
    EstateConfigDto config = 1;
}
message GeIeUrlConfigReply {
    IeUrlConfigDto config = 1;
}
message GetLawRegulationConfigReply {
    LawRegulationConfigDto config = 1;
}
message GetToDoConfigReply {
  ToDoConfigDto config = 1;
}

message GetAdtextReply {
    AdtextConfigDto config = 1;
}

message AdtextConfigDto {
    repeated AdtextCategoryDto categories = 1;
}

message AdtextCategoryDto {
    string display_name = 1;
}


message GetWishConfigReply {
    WishConfigDto config = 1;
}
message WishConfigDto {
    repeated RangeTypeReferenceDto range_type_references = 1;
    repeated string case_type_references = 2;
    repeated string estate_type_references = 3;
    LocationTypeReferenceDto location_type_reference = 4;
    string basic_reference_id_usage = 5;
    string basic_description_usage = 6;
    MatchSettingsDto match_settings = 7;
    repeated string entityfeature_type_references = 8;
    string living_area_range_namespace = 9;
    string price_range_namespace = 10;
    
}

message RangeTypeReferenceDto {
    double priority = 1;
    string instance_namespace = 2;
}

message LocationTypeReferenceDto {
    LocationItemTypeReferenceDto city_type_reference = 1;
    LocationItemTypeReferenceDto street_type_reference = 2;
    LocationItemTypeReferenceDto address_type_reference = 3;
    LocationItemTypeReferenceDto municipality_type_reference = 4;
    LocationItemTypeReferenceDto region_type_reference = 5;
    LocationItemTypeReferenceDto place_type_reference = 6;
    LocationItemTypeReferenceDto province_type_reference = 7;
    LocationItemTypeReferenceDto supplementary_city_type_reference = 8;
    LocationItemTypeReferenceDto polygon_type_reference = 9;
}
message LocationItemTypeReferenceDto {
    string location_type_namespace = 1;
    double priority = 2;
    string usage = 3;
}

message MatchSettingsDto {
    bool instant = 1;
    bool daily = 2;
    bool weekly = 3;
}