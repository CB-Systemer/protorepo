syntax = "proto3";
option csharp_namespace = "Cbs.Communication.Email";

service Email {
  // Attachments
  rpc GetAttachments(GetAttachmentsRequest) returns (GetAttachmentsReply);
  rpc DownloadAttachment (DownloadAttachmentRequest) returns (DownloadAttachmentReply);
 
  // Configs
  rpc GetConfigs(GetConfigRequest) returns (EmailConfigs);
  rpc CreateConfigs(EmailConfigs) returns (EmailConfigs);  
  rpc DeleteConfig(DeleteConfigRequest) returns (EmptyReply); // Not needed? 
  
  // Emails
  rpc GetEmails(GetEmailsRequest) returns (EmailsReply);
  rpc GetEmail(GetEmailRequest) returns (EmailDto);
  rpc SendEmail(SendEmailRequest) returns (SendEmailReply);
    
  // Misc
  rpc GetDomains(GetDomainsRequest) returns (DomainsReply);  
  rpc MarkAsRead(MarkAsReadRequest) returns (EmptyReply);
  rpc ResolveMenu(ResolveMenuRequest) returns (ContextMenuReply);
  
  // Accounts
  rpc GetAccounts(GetAccountsRequest) returns (EmailAccounts);
  rpc CreateAccount(CreateAccountRequest) returns (EmailAccount);
  rpc DeleteAccount(DeleteAccountRequest) returns (EmptyReply);
  rpc VerifyAccount(VerifyAccountRequest) returns (VerifyAccountReply);
  rpc GetVerifyLink(GetVerifyLinkRequest) returns (GetVerifyLinkReply);
  rpc ResendVerificationEmail(ResendVerificationEmailRequest) returns (EmptyReply);
  rpc UpsertSelectedFolders(UpsertFoldersRequest) returns (EmailAccount);
}

// Attachments
message DownloadAttachmentRequest {
  string accountId = 1;
  string emailId = 2;
  string attachmentId = 3;
}

message DownloadAttachmentReply {
  bytes bytes = 1;
  string contentType = 2;
}

// Configs
message GetConfigRequest{
}

message DeleteConfigRequest{
}

message EmailConfig{
	string directoryId = 1;
	string clientId = 2;
	string clientSecret =3;
	string id = 4;
	string domainName = 5;
}

message EmailConfigs{
	repeated EmailConfig configs = 1;
}

message EmptyReply{}

message SendEmailRequest {
    string accountId = 1;
	string subject = 2;
    string body = 3;
    bool IsHtml = 4;
    repeated EmailAddressDto to = 5;
	repeated EmailAddressDto toCC = 6;
	repeated EmailAddressDto toBCC = 7;
}

message SendEmailReply {
}

// Emails
message GetEmailsRequest{
	string accountId = 1;
	string mailFolderId = 2;
	int32 skip = 3;
}

message EmailsReply{
	repeated EmailDto emails = 1;
}

message EmailDto{
	string subject = 1;
	string body = 2;
	string sentAt = 3;
	string receivedAt = 9;
	bool hasAttachments = 4;
	EmailAddressDto sender = 5;
	repeated EmailAddressDto recipients = 6;
	repeated EmailAddressDto ccRecipients = 7;
	repeated EmailAddressDto bccRecipients = 8;
	string id = 10;
	bool isRead = 11;
	string bodyPreview = 12;
}

message EmailAddressDto{
	string displayName = 1;
	string email = 2;
}

message GetEmailRequest{
	string emailId = 1;
	string accountId = 2;
}

//Misc
message MarkAsReadRequest{
	string emailId = 1;
	string accountId = 2;
	bool MarkAsRead = 3;
}

message GetDomainsRequest {
	string directoryId = 1;
	string clientId = 2;
	string clientSecret =3;
	string id = 4;
}

message DomainsReply {
	repeated Domain DomainList = 1;
}

message Domain {
	string name = 1;
	bool isDefault = 2;
}

message ResolveMenuRequest{	
}

message ContextMenuReply {
	repeated ContextMenu ContextMenues = 1;
}

message ContextMenu{
	string type = 5;  // link or expandable
    string title = 4;
    string path = 3;  //ex. some/id
    int32 priority = 2;
    repeated ContextMenu submenues = 1;
	bool disabled = 6;
	string id = 7;
}

// Attachment
message GetAttachmentsRequest{
	string emailId = 1;
	string accountId = 2;
}

message GetAttachmentsReply{
	repeated AttachmentDto attachments = 1;
}

message AttachmentDto{
	string id = 1;
	string contentType = 2;
	string name = 3;
	int32 size = 4;
	bool inLine = 5;
}

// Accounts (could be refactored to own service)
message GetAccountsRequest{
	string actorId = 1;
}

message EmailAccounts{
	repeated EmailAccount Accounts = 1;
}

message EmailAccount{
	string id = 1;
	string actorId = 2; 
	repeated EmailFolder EmailFolders = 3;
	string email = 4;
	bool verified = 5;
	bool connectionError = 6;
	CalendarDto Calendar = 7;
}

message EmailFolder {
	bool selected = 1;
	bool removedFromSource = 2;
	string name = 3;
	string id = 4;
	int32 unreadCount = 5;
}

message CalendarDto{
	string id = 1;
	string name = 2;
	string accountName = 5;
}

message CreateAccountRequest{
	string emailLocalPart = 1;
	string tenantId = 2;
}

message DeleteAccountRequest{
	string accountId =  1;
}

message VerifyAccountRequest{
	string accountId = 1;
	string verificationCode = 2;
}

message GetVerifyLinkRequest{
	string accountId = 1;
	string extensionId = 2;
}

message GetVerifyLinkReply{
	string link = 1;
}

message VerifyAccountReply{
	bool verified = 1;
}

message ResendVerificationEmailRequest{
	string accountId = 1;
}

message UpsertFoldersRequest{
	string accountId = 1;
	repeated string selectedFolders = 2;
}