// ***************************** SHOULD ONLY BE UPDATED/CHANGED TROUGH OUR PROTOREPO **********************************
syntax = "proto3";

option csharp_namespace = "Recom.Api";

service RecomApi {
  rpc SendMessage (SendMessageRequest) returns (SendMessageReply);
  rpc SendSmsMessage (SendSmsMessageRequest) returns (SendSmsMessageReply);
  rpc SendEmailMessage (SendEmailMessageRequest) returns (SendEmailMessageReply);
  rpc SendAnonymousEmailMessage (SendAnonymousEmailRequest) returns (SendEmailMessageReply);
  rpc GetRecipientsInfoMessage (GetRecipientsInfoMessageRequest) returns (GetRecipientsInfoMessageReply);
}

message GetRecipientsInfoMessageRequest {
  reserved 1 to 5;
  ActorContext actor_context = 6;
  string context_tenant_id = 7;
  string context_resource_group_id = 8;
  repeated string actor_recipients = 9;
}

message GetRecipientsInfoMessageReply {
  repeated ActorRecipientInfo actors = 1;
}

message ActorRecipientInfo {
  string email_address = 1;
  string display_name = 2;
  string sms_number = 3;
  string actor_id = 4;
  string tenant_id = 5;
  string resource_group_id = 6;
}

message SendSmsMessageRequest {
	string number = 1;
	string content = 2;
	string countryCode = 3;
	string sender = 4;
	bool dryRun = 5;
	ActorContext actorContext = 6;
  string contextTenantId = 7;
  string contextResourceGroupId = 8;
  BillingContext billing_context = 9;
}

message SendSmsMessageReply {
  string status = 1;
  bool success = 2;
}

message SendEmailMessageRequest {
  repeated ActorRecipient actor_recipients = 1;
  repeated ActorRecipient actor_cc = 10;
  repeated ActorRecipient actor_bcc = 11;
  string content = 2;
  string subject = 3;
  bool dry_run = 4;
  bool send_instant = 5;
  ActorContext actor_context = 6;
  string context_tenant_id = 7;
  string context_resource_group_id = 8;
  bool use_personal = 9;
  repeated ArchiveOn archive_on = 12;
  bool send_many = 13;
  BillingContext billing_context = 14;
}

message ActorRecipient {
  string actor_id = 1;
  string tenant_id = 2;
  string resource_group_id = 3;
}

message ArchiveOn {
  string parent_id = 1;
  string tenant_id = 2;
  string resource_group_id = 3;
}

message SendEmailMessageReply {
  string status = 1;
  bool success = 2;
}

message SendAnonymousEmailRequest {
  string subject = 1;
  string content = 2;
  repeated string recipients = 3;
  bool send_instant = 4;
  string context_tenant_id = 5;
  string context_resource_group_id = 6;
  ActorContext actor_context = 7;
  BillingContext billing_context = 8;
}

message SendMessageRequest {
  string template_alias = 1;
  bool send_instant = 2;
  string context_datanode_id = 5;
  string context_tenant_id = 6;
  string context_resource_group_id = 7;
  ActorContext actor_context = 8;
  string channel = 9;
  string params = 10;
  string recipient_actor_id = 11;
  string recipient_tenant_id = 12;
  string recipient_resource_group_id = 13;
  bool dry_run = 14;
  bool use_personal = 15;
  bool isAlias = 16;
  repeated ArchiveOn archive_on = 17;
  bool send_many = 18;
  string sender = 19;
  BillingContext billing_context = 20;
}

message SendMessageReply {
  string status = 1;
  bool success = 2;
}

message ActorContext {
  string access_token = 1;
  string tenant_id = 2;
  string actor_id= 3;
  string actor_namespace= 4;
  string resource_group_id = 5;
  repeated string permissions = 6;
}

message BillingContext {
   string tenant_id = 1;
   string resource_group_id = 2;
   string application_id = 3;
   string transaction_id = 4;
   string executing_actor_id = 5;
   string rext_id = 6;
}
